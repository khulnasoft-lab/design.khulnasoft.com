# This file is basically the AutoDevops template (https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Auto-DevOps.gitlab-ci.yml)
# plus some defaults (e.g. tags).

stages:
  - build
  - test
  - deploy  # dummy stage to follow the template guidelines

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  image: alpine:latest
  tags:
    - gitlab-org

variables:
  DOCKER_DRIVER: overlay2
  ROLLOUT_RESOURCE_TYPE: deployment
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501
  DANGER_GITLAB_API_TOKEN: $GITLAB_TOKEN
  REVIEW_APP_ROOT: "https://$CI_PROJECT_ROOT_NAMESPACE.gitlab.io/-/gitlab-services/design.gitlab.com/-/jobs/$CI_JOB_ID/artifacts/public"

include:
  - template: Jobs/Code-Quality.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Jobs/Code-Quality.gitlab-ci.yml
  # TODO: check if needed
  #  - template: Jobs/Browser-Performance-Testing.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Jobs/Browser-Performance-Testing.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/-/blob/master/lib/gitlab/ci/templates/Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Security/SAST.gitlab-ci.yml
  - project: 'gitlab-org/frontend/frontend-build-images'
    file: '/semantic-release/.gitlab-ci-template.rules.yml'
  - project: gitlab-org/frontend/untamper-my-lockfile
    file: .gitlab-ci-template.yml

code_quality:
  tags:
    - gitlab-org-docker

danger-review:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:danger
  stage: test
  needs: []
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: never
    - if: '$DANGER_GITLAB_API_TOKEN'
  script:
    - danger --fail-on-errors=true

.node:
  image: node:14.16.1
  before_script:
    - "echo REVIEW_APP_ROOT: $REVIEW_APP_ROOT"
    - "echo CI_PAGES_URL: $CI_PAGES_URL"
    - "echo CI_PROJECT_NAMESPACE: $CI_PROJECT_NAMESPACE"
    - "echo CI_PROJECT_NAME: $CI_PROJECT_NAME"
    - "echo CI_PROJECT_ROOT_NAMESPACE : $CI_PROJECT_ROOT_NAMESPACE"
    - yarn install --frozen-lockfile
  cache:
    key:
      files:
        - .gitlab-ci.yml
        - yarn.lock
    paths:
      - node_modules

.pages:
  extends: .node
  stage: deploy
  script:
    - yarn build
  artifacts:
    paths:
      - public

pages:review:
  extends: .pages
  needs: []
  rules:
    - if: $CI_MERGE_REQUEST_IID
  environment:
    name: new-review-app/$CI_COMMIT_REF_NAME
    url: $REVIEW_APP_ROOT/index.html

pages:
  extends: .pages
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

test:
  extends: .node
  stage: test
  script: yarn run test

semantic-release:
  extends: .semantic-release
  allow_failure: true
  script:
    - semantic-release --debug
  rules:
    # Only run releases on scheduled pipelines on the main branch
    # This allows us to have a weekly release cadence:
    # https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/pipeline_schedules
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
