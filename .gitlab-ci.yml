stages:
  - pre-build
  - test
  - deploy
  - performance

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
      variables:
        CACHE_PREFIX: '${CI_MERGE_REQUEST_IID}'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        CACHE_PREFIX: 'main'

default:
  image: alpine:latest
  tags:
    - gitlab-org

variables:
  # We should double-check whether the remaining Docker in Docker jobs need the following
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

include:
  - template: Jobs/Code-Quality.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Code-Quality.gitlab-ci.yml
  - template: Jobs/Browser-Performance-Testing.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Browser-Performance-Testing.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Dependency-Scanning.latest.gitlab-ci.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml
  - project: gitlab-org/frontend/untamper-my-lockfile
    file: 'templates/merge_request_pipelines.yml'
  - component: ${CI_SERVER_FQDN}/gitlab-org/components/danger-review/danger-review@2.0.0
    inputs:
      job_stage: "pre-build"

###############
#
## Overrides for jobs from templates
#
###############

browser_performance:
  needs:
    - job: review-app
      optional: true
    - job: production
      optional: true
  tags:
    - gitlab-org-docker
  rules:
    - when: always

code_quality:
  tags:
    - gitlab-org-docker
  rules:
    - when: always

dependency_scanning:
  # This can be executed immediately
  needs: []

sast:
  # This can be executed immediately
  needs: []

###############
#
## Custom Jobs
#
###############
.node-job:
  image: node:20.13-alpine
  needs: []
  before_script:
    - apk add --no-cache bash git
    - yarn install --frozen-lockfile

.build_cache:
  variables:
    CACHE_POLICY: pull
  cache:
    - key: "${CACHE_PREFIX}-nuxt"
      fallback_keys:
        - main-nuxt
      paths:
        - node_modules/
      policy: $CACHE_POLICY

check_links:
  extends:
    - .node-job
    - .build_cache
  stage: test
  allow_failure: true
  script:
    - yarn check-links

lint_and_test:
  extends:
    - .node-job
  stage: test
  script:
    - yarn test

.pages:
  extends:
    - .node-job
    - .build_cache
  stage: deploy
  publish: public
  variables:
    CACHE_POLICY: pull-push
    # Setting the default CURRENT_PAGES_URL, in order to make pages work for forks
    # CURRENT_PAGES_URL is set in the canonical project
    CURRENT_PAGES_URL: "${CI_PAGES_URL}"
  script:
    - apk add --no-cache gzip brotli
    - bash ./scripts/build.sh
    - ls -a public
    - echo "${CI_ENVIRONMENT_URL}" > environment_url.txt
    - echo "Pages accessible through ${CI_ENVIRONMENT_URL}"
  artifacts:
    paths:
      - public/*
      - environment_url.txt

production:
  extends:
    - .pages
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  pages:
    expire_in: never
  environment:
    name: "pages"
    url: "${CURRENT_PAGES_URL}"

review-app:
  extends:
    - .pages
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
  variables:
    PAGES_PREFIX: 'review-mr-${CI_MERGE_REQUEST_IID}'
  pages:
    path_prefix: "${PAGES_PREFIX}"
    expire_in: "2 weeks"
  environment:
    name: "pages-review/MR-${CI_MERGE_REQUEST_IID}"
    url: "${CURRENT_PAGES_URL}/${PAGES_PREFIX}"
    auto_stop_in: "2 weeks"
