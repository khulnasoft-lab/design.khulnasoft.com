# This file is basically the AutoDevops template (https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Auto-DevOps.gitlab-ci.yml)
# plus some defaults (e.g. tags).

# TODO: pages-phase-3, cleanup unneeded stages
stages:
  - pre-build
  - build
  - test
  - deploy
  - review
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

default:
  image: alpine:latest
  tags:
    - gitlab-org

variables:
  # KUBE_INGRESS_BASE_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  # KUBE_INGRESS_BASE_DOMAIN: domain.example.com

  POSTGRES_USER: user
  POSTGRES_PASSWORD: testing-password
  POSTGRES_ENABLED: "true"
  POSTGRES_DB: $CI_ENVIRONMENT_SLUG
  POSTGRES_VERSION: 9.6.2

  DOCKER_DRIVER: overlay2

  ROLLOUT_RESOURCE_TYPE: deployment

  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

include:
  # These templates can be removed once we switch away from AutoDevOps to pages
  # TODO: pages-phase-3
  - template: Jobs/Build.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Build.latest.gitlab-ci.yml
  - template: Jobs/Test.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Jobs/Test.latest.gitlab-ci.yml
  - template: Jobs/Container-Scanning.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Container-Scanning.latest.gitlab-ci.yml
  - template: Jobs/Deploy.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Deploy.gitlab-ci.yml
  # These templates we should retain after the switch to pages
  - template: Jobs/Code-Quality.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Code-Quality.gitlab-ci.yml
  - template: Verify/Browser-Performance.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Verify/Browser-Performance.latest.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Dependency-Scanning.latest.gitlab-ci.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml
  - project: 'gitlab-org/frontend/frontend-build-images'
    file: '/semantic-release/.gitlab-ci-template.rules.yml'
  - project: gitlab-org/frontend/untamper-my-lockfile
    file: 'templates/merge_request_pipelines.yml'

## Overrides for jobs that can be removed in Phase 3 of the AutoDevOps to pages migration
# TODO: pages-phase-3

build:
  needs: []
  tags:
    - gitlab-org-docker
  rules:
    - when: always

container_scanning:
  needs: [build]
  tags:
    - gitlab-org-docker

review:
  needs: [build]

test:
  needs: []
  rules:
    - when: always

###############
#
## Overrides for jobs from templates
#
###############

browser_performance:
  needs:
    - job: review
      optional: true
    - job: production
      optional: true
  rules:
    - when: always

code_quality:
  tags:
    - gitlab-org-docker
  rules:
    - when: always

dependency_scanning:
  # This can be executed immediately
  needs: []

sast:
  # This can be executed immediately
  needs: []

###############
#
## Custom Jobs
#
###############

danger-review:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:danger
  stage: pre-build
  dependencies: []
  rules:
    - if: '$CI_MERGE_REQUEST_IID && $DANGER_GITLAB_API_TOKEN'
  script:
    - danger_id=$(echo -n ${DANGER_GITLAB_API_TOKEN} | md5sum | awk '{print $1}' | cut -c5-10)
    - danger --fail-on-errors=true --verbose --danger_id="${danger_id}"

check_links:
  image: node:18.16
  stage: test
  needs: []
  allow_failure: true
  script:
    - yarn install --frozen-lockfile
    - yarn check-links

semantic-release:
  extends: .semantic-release
  allow_failure: true
  script:
    - semantic-release --debug
  rules:
    # Only run releases on scheduled pipelines on the main branch
    # This allows us to have a weekly release cadence:
    # https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/pipeline_schedules
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
