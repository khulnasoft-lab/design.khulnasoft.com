stages:
  - pre-build
  - test
  - deploy
  - performance

workflow:
  rules:
    - if: '$CI_MERGE_REQUEST_IID'
      variables:
        PAGES_ENV_NAME: "pages-review/MR-$CI_MERGE_REQUEST_IID"
        PAGES_PREFIX: 'review-mr-${CI_MERGE_REQUEST_IID}'
        CACHE_PREFIX: '${CI_MERGE_REQUEST_IID}'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      variables:
        PAGES_ENV_NAME: "pages"
        PAGES_PREFIX: "" # no prefix
        CACHE_PREFIX: 'main'

default:
  image: alpine:latest
  tags:
    - gitlab-org

variables:
  # We should double-check whether the remaining Docker in Docker jobs need the following
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

include:
  # These templates can be removed once we switch away from AutoDevOps to pages
  # TODO: pages-phase-3
  - template: Jobs/Test.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab-foss/blob/master/lib/gitlab/ci/templates/Jobs/Test.latest.gitlab-ci.yml
  # These templates we should retain after the switch to pages
  - template: Jobs/Code-Quality.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Code-Quality.gitlab-ci.yml
  - template: Jobs/Browser-Performance-Testing.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Browser-Performance-Testing.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/Dependency-Scanning.latest.gitlab-ci.yml
  - template: Jobs/SAST.latest.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Jobs/SAST.latest.gitlab-ci.yml
  - project: 'gitlab-org/frontend/frontend-build-images'
    file: '/semantic-release/.gitlab-ci-template.rules.yml'
  - project: gitlab-org/frontend/untamper-my-lockfile
    file: 'templates/merge_request_pipelines.yml'
  - component: ${CI_SERVER_FQDN}/gitlab-org/components/danger-review/danger-review@1.4.1
    inputs:
      job_stage: "pre-build"


## Overrides for jobs that can be removed in Phase 3 of the AutoDevOps to pages migration
# TODO: pages-phase-3
test:
  needs: []
  rules:
    - when: always

###############
#
## Overrides for jobs from templates
#
###############

browser_performance:
  needs:
    - job: pages
      optional: true
  tags:
    - gitlab-org-docker
  rules:
    - when: always

code_quality:
  tags:
    - gitlab-org-docker
  rules:
    - when: always

dependency_scanning:
  # This can be executed immediately
  needs: []

sast:
  # This can be executed immediately
  needs: []

###############
#
## Custom Jobs
#
###############
.node-job:
  image: node:20.13-alpine
  needs: []
  before_script:
    - apk add --no-cache bash git
    - yarn install --frozen-lockfile

.build_cache:
  variables:
    CACHE_POLICY: pull
  cache:
    - key: "${CACHE_PREFIX}-nuxt"
      fallback_keys:
        - main-nuxt
      paths:
        - node_modules/
      policy: $CACHE_POLICY

check_markdown:
  extends:
    - .node-job
  stage: test
  script:
    - yarn markdown-lint

check_links:
  extends:
    - .node-job
    - .build_cache
  stage: test
  allow_failure: true
  script:
    - yarn check-links

semantic-release:
  extends: .semantic-release
  allow_failure: true
  script:
    - semantic-release --debug
  rules:
    # Only run releases on scheduled pipelines on the main branch
    # This allows us to have a weekly release cadence:
    # https://gitlab.com/gitlab-org/gitlab-services/design.gitlab.com/-/pipeline_schedules
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

pages:
  extends:
    - .node-job
    - .build_cache
  stage: deploy
  publish: public
  pages:
    path_prefix: "${PAGES_PREFIX}"
    expire_in: "1 week"
  variables:
    CACHE_POLICY: pull-push
  script:
    - apk add --no-cache gzip brotli
    - bash ./scripts/build.sh
    - ls -a public
    - echo "${CI_ENVIRONMENT_URL}" > environment_url.txt
    - echo "Pages accessible through ${CI_ENVIRONMENT_URL}"
  artifacts:
    paths:
      - public/*
      - environment_url.txt
  environment:
    name: "${PAGES_ENV_NAME}"
    url: "${CI_PAGES_URL}/${PAGES_PREFIX}"
